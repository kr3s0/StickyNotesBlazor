@using DataAccess.BusinessLogic
@using StickyNotesBlazor.Models
@using Microsoft.AspNetCore.ProtectedBrowserStorage

@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager
@inject IUserData user_db

<div class="container">
    <div class="d-flex justify-content-center h-100">
        <div class="card card-userForm">
            <div class="card-header">
                <h3>@TypeOfForm</h3>
                <div class="d-flex justify-content-end social_icon">
                    <span><i class="fab fa-facebook-square"></i></span>
                    <span><i class="fab fa-google-plus-square"></i></span>
                    <span><i class="fab fa-twitter-square"></i></span>
                </div>
            </div>
            <div class="card-body">
                <form>
                    <EditForm Model="@NewUser" OnValidSubmit="@SubmitUser">
                        <DataAnnotationsValidator />
                        <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                            </div>
                            <InputText class="form-control" placeholder="username" @bind-Value="@NewUser.Username" />

                        </div>
                        <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-key"></i></span>
                            </div>
                            <InputText class="form-control" placeholder="password" @bind-Value="@NewUser.Password" />

                        </div>
                        <ValidationSummary />
                        <div class="form-group">
                            <button type="submit" class="btn float-right login_btn myfocus">@TypeOfForm</button>
                        </div>
                    </EditForm>
                </form>
            </div>
        </div>
    </div>
</div>


<div id="@ModalToggler" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header modal-myheader">
                <h5 class="modal-title"><span class="oi oi-chevron-bottom"></span> The Stickies</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="@(()=>ModalToggler="modal-hide")">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@alert</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary modal-myfooter" data-dismiss="modal" @onclick="@(()=>ModalToggler="modal-hide")">Close</button>
            </div>
        </div>
    </div>
</div>


@code{
    [Parameter]
    public string TypeOfForm { get; set; }

    string alert = "";

    private string ModalToggler = "modal-hide";

    DisplayUserModel NewUser = new DisplayUserModel();

    private async Task SubmitUser()
    {
        if (TypeOfForm == "Log in")
        {
            int userid = await user_db.UserLogIn(NewUser.GetDatabaseModel());
            await ProtectedSessionStore.SetAsync("userid", userid);
            if (userid != 0)
            {
                await ProtectedSessionStore.SetAsync("username", NewUser.Username);
                NavigationManager.NavigateTo("/Sections");
            }
            else
            {
                alert = "Plase provide a valid username and password";
                ModalToggler = "modal-show";
            }

        }
        else
        {
            bool success = await user_db.InsertUser(NewUser.GetDatabaseModel());
            if (success)
            {
                alert = "You have successfully registered to The Stickies. Please Log in.";
            }
            else
            {
                alert = "Sorry, registration has failed. Change your data and try again.";
            }
            ModalToggler = "modal-show";
        }
    }

}